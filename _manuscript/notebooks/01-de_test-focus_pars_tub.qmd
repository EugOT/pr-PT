---
title: "Differential expression analysis of Hypothalamus datasets from Kim DW et al., 2020 and Romanov et al., 2020 with focus on Pars Tuberalis"
author: "Evgenii O. Tretiakov"
date: "`r Sys.Date()`"
format:
  html:
    toc: true
    df-print: paged
    code-fold: true
    fig-width: 9
    fig-height: 12
    fig-format: retina
    fig-responsive: true
    fig-dpi: 120
  pdf:
    colorlinks: true
    fontsize: 12pt
execute:
  keep-md: true
  echo: true
  error: false
  message: false
  warning: false
  debug: false
knitr:
  opts_chunk:
    autodep: true
    fig.align: center
    fig.retina: 2
    fig.width: 14
    fig.height: 12
---

```{r}
#| label: setup
#| include: false
DOCNAME <- "pars-tuberalis-analysis"
NOW <- Sys.time()

# Time chunks during knitting
knitr::knit_hooks$set(timeit = function(before) {
  if (before) {
    print(paste("Start:", Sys.time()))
    NOW <<- Sys.time()
  } else {
    print(paste("Stop:", Sys.time()))
    print(Sys.time() - NOW)
  }
})

knitr::knit_hooks$set(debug = function(before, options, envir) {
  if (!before) {
    message(
      paste(names(envir), as.list(envir),
        sep = " = ", collapse = "\n"
      )
    )
  }
})

knitr::opts_chunk$set(
  cache          = FALSE,
  dev            = c("png", "pdf"),
  timeit         = TRUE
)

# Sys.setenv(RETICULATE_PYTHON = "/home/etretiakov/micromamba/envs/r-reticulate/bin/python")
# reticulate::use_condaenv("/home/etretiakov/micromamba/envs/r-reticulate/bin/python")
#
Sys.setenv(RETICULATE_PYTHON = "/opt/conda/bin/python")
reticulate::use_condaenv("/opt/conda/bin/python")
```

## Load data and setup parameters

```{r}
#| label: libraries
#| cache: false
# Load tidyverse infrastructure packages
suppressPackageStartupMessages({
  library(future)
  library(here)
  library(tidyverse)
  library(magrittr)
  library(stringr)
  library(skimr)
  library(RColorBrewer)
  library(viridis)
})


# Load packages for scRNA-seq analysis and visualisation
suppressPackageStartupMessages({
  library(ggplot2)
  library(cowplot)
  library(patchwork)
  library(ggstatsplot)
  library(Seurat)
  library(SeuratWrappers)
  library(scCustomize)
})
```

### Set paths

```{r}
#| label: paths
src_dir <- here("code")
data_dir <- here("data")
output_dir <- here("output")
plots_dir <- here(output_dir, "figures/")
tables_dir <- here(output_dir, "tables/")
```

### Load helper functions and gene-sets

```{r}
#| label: source
#| cache: false
source(here(src_dir, "genes.R"))
source(here(src_dir, "functions.R"))
```

### Set fixed variables

```{r}
#| label: params-computation
#| cache: false
# set seed
reseed <- 42
set.seed(seed = reseed)

# Parameters for parallel execution
n_cores <- parallelly::availableCores() / 2 - 1
plan("multisession", workers = n_cores)
options(
  future.globals.maxSize = 100000 * 1024^2,
  future.rng.onMisuse = "ignore"
)
plan()


# ggplot2 theme
theme_set(ggmin::theme_powerpoint())
```

```{r}
#| label: params
bioproject <- "PRJNA547712"
project <- "kim2020_Hypoth-dev"
cb_fpr <- 0.001
low_cutoff_gene <- 500
high_cutoff_gene <- NULL
high_cutoff_gene <- 5000
low_cutoff_umis <- NULL
low_cutoff_umis <- -Inf
high_cutoff_umis <- 25000
high_cutoff_pc_mt <- 15
high_cutoff_pc_ribo <- 20
high_cutoff_pc_hb <- 0.1
high_cutoff_doublet_score <- 0.33
high_cutoff_complexity <- 0.85
connectivity_model <- "min_tree"
k <- 10
metric <- "euclidean"
signature <- 100
```

## Load data from Kim DW et al 2020 (bioproject PRJNA547712)

```{r}
#| label: convert-to-seurat
srt <- schard::h5ad2seurat(here(
  data_dir,
  "kim2020_combined.h5ad"
), use.raw = TRUE)

X_umap <- srt@meta.data |>
  select(X, Y, Z) |>
  as.matrix()
colnames(X_umap) <- c("UMAP_1", "UMAP_2", "UMAP_3")
rownames(X_umap) <- colnames(srt)
srt[["umap"]] <- CreateDimReducObject(embeddings = X_umap, key = "umap_", assay = DefaultAssay(srt))
srt$Age %<>% forcats::fct(levels = c(
  "E10", "E11", "E12", "E13", "E14",
  "E15", "E16", "E17", "E18", "P0",
  "P2", "P4", "P8", "P10", "P14", "P23", "P45"
))

Idents(srt) <- "Age"
srt <- Store_Palette_Seurat(seurat_object = srt, palette = rev(brewer.pal(n = 11, name = "Spectral")), palette_name = "expr_Colour_Pal")
```

```{r}
#| label: load-seurat
print(srt)
nature2020 <- readRDS("/data/1_heteroAstrocytes/PRJNA548917/old/oldCCA_nae_srt.rds")
nature2020 <- UpdateSeuratObject(nature2020)
nature2020$Age <-
  Cells(nature2020) |>
  str_split(pattern = ":", simplify = T) %>%
  .[, 1] %>%
  str_split_fixed(pattern = "_", n = 3) %>%
  .[, 3]
nature2020$Age %<>% forcats::fct(levels = c(
  "E10", "E11", "E12", "E13", "E14",
  "E15", "E16", "E17", "E18", "P0",
  "P2", "3P2", "P4", "P8", "1P10",
  "P10", "P14", "P23", "P45"
))
nature2020$Age %<>% fct_collapse(
  P2 = c("P2", "3P2"),
  P10 = c("1P10", "P10")
)
print(nature2020)
glimpse(nature2020@meta.data)
table(Idents(nature2020))
pt_subset_nature2020 <- subset(nature2020, idents = c("38", "42", "45"))
print(pt_subset_nature2020)
```

```{r}
#| label: plot-feature-romanov2020
#| fig-width: 24
#| fig-height: 36
FeaturePlot(
  nature2020,
  features = c(
    "Tshb", "Cck", "Pitx1",
    "Eya1", "Eya2", "Eya3", "Eya4",
    "Sox2", "Hlf", "Tshr",
    "Cckar", "Cckbr", "Gpr173",
    "Foxl2", "Lhx3", "Lhx4", "Pit1", "Gata2"
  ),
  label = F,
  blend = F,
  order = TRUE,
  pt.size = 1.2,
  raster.dpi = c(1024, 1024),
  alpha = 0.5,
  split.by = "Age"
)
```

```{r}
#| label: plot-feature-pt-romanov2020
#| fig-width: 24
#| fig-height: 36
FeaturePlot(
  pt_subset_nature2020,
  features = c(
    "Tshb", "Cck", "Pitx1",
    "Eya1", "Eya2", "Eya3", "Eya4",
    "Sox2", "Hlf", "Tshr",
    "Cckar", "Cckbr", "Gpr173",
    "Foxl2", "Lhx3", "Lhx4", "Pit1", "Gata2"
  ),
  label = T,
  blend = F,
  order = TRUE,
  pt.size = 1.2,
  raster.dpi = c(1024, 1024),
  alpha = 0.5,
  split.by = "Age"
)
```

```{r}
#| label: norm-scale-matrix
srt <- NormalizeData(srt)
srt <- FindVariableFeatures(srt, selection.method = "vst", nfeatures = 3000)
# all.genes <- rownames(srt)
# srt <- ScaleData(srt, features = all.genes)
srt <- ScaleData(srt)
```

```{r}
#| label: transfer-annotations
hypoth.anchors <- FindTransferAnchors(
  reference = nature2020, query = srt, dims = 1:30,
  reference.reduction = "pca"
)
predictions <- TransferData(anchorset = hypoth.anchors, refdata = nature2020$wtree, dims = 1:30)
srt <- AddMetaData(srt, metadata = predictions)
table(srt$predicted.id)
```

```{r}
#| label: transfer-umap
nature2020 <- RunUMAP(nature2020, dims = 1:30, reduction = "pca", return.model = TRUE)
srt <- IntegrateEmbeddings(
  anchorset = hypoth.anchors, reference = nature2020, query = srt,
  new.reduction.name = "ref.pca"
)
srt <- ProjectUMAP(
  query = srt, query.reduction = "ref.pca", reference = nature2020,
  reference.reduction = "pca", reduction.model = "umap"
)
```

```{r}
#| label: plot-reference-umap-transfered
p1 <- DimPlot(nature2020,
  reduction = "umap", group.by = "wtree", label = TRUE, label.size = 3,
  repel = TRUE
) + NoLegend() + ggtitle("Reference annotations")
p2 <- DimPlot(srt,
  reduction = "ref.umap", group.by = "predicted.id", label = TRUE,
  label.size = 3, repel = TRUE
) + NoLegend() + ggtitle("Query transferred labels")
p1 + p2
```

```{r}
#| label: plot-feature-romanov2020-integrated
#| fig-width: 24
#| fig-height: 36
FeaturePlot(
  nature2020,
  features = c(
    "Tshb", "Cck", "Pitx1",
    "Eya1", "Eya2", "Eya3", "Eya4",
    "Sox2", "Hlf", "Tshr",
    "Cckar", "Cckbr", "Gpr173",
    "Foxl2", "Lhx3", "Lhx4", "Pit1", "Gata2"
  ),
  label = F,
  blend = F,
  order = TRUE,
  pt.size = 1.2,
  raster.dpi = c(1024, 1024),
  alpha = 0.5,
  split.by = "Age"
)
```

# Calculate and plot chi2 test of independence between Sox2 and Tshr expression in hypothalamus across different developmental stages

```{r}
#| label: get-goi-sox2-tshr
sbs_mtx <- GetAssayData(object = srt, layer = "counts", assay = "RNA")[c("Sox2", "Tshr"), ] %>%
  as.data.frame() %>%
  t() %>%
  as.data.frame() %>%
  select(Sox2, Tshr) %>%
  dplyr::bind_cols(srt@meta.data) %>%
  select(Age, Sox2, Tshr) %>%
  mutate(
    Sox2_pos = Sox2 > 0,
    Tshr_pos = Tshr > 0
  )

sbs_mtx %>% skimr::skim()
```

```{r}
#| label: sox2-tshr-stats
#| fig-width: 8
#| fig-height: 24
write_csv(sbs_mtx, here(tables_dir, "Sox2-Tshr-expression-status-between-Ages-on-evaluation-datasets.csv"))


# plot
grouped_ggpiestats(
  # arguments relevant for `ggpiestats()`
  data = sbs_mtx,
  x = Tshr_pos,
  y = Sox2_pos,
  grouping.var = Age,
  perc.k = 1,
  package = "ggsci",
  palette = "category10_d3",
  # arguments relevant for `combine_plots()`
  title.text = "Sox2 specification of Tshr-positive hypothalamic development",
  caption.text = "Asterisks denote results from proportion tests; \n***: p < 0.001, ns: non-significant",
  plotgrid.args = list(nrow = 8)
)
```

## Calculate and plot hexagonal cells representation in hypothalamus across different developmental stages with meta information

```{r}
srt
```

```{r}
library(hexbin)
# Extract UMAP coordinates
umap_coords <- Embeddings(srt, reduction = "ref.umap")

# Create hexbin object
hb <- hexbin(umap_coords[, 1], umap_coords[, 2], xbins = 64)

# Create a data frame for plotting
hex_data <- data.frame(
  x = hcell2xy(hb)$x,
  y = hcell2xy(hb)$y,
  count = hb@count
)

# Create the plot
ggplot(hex_data, aes(x = x, y = y, fill = count)) +
  geom_hex(stat = "identity") +
  scale_fill_gradientn(colors = ggsci::pal_material("amber")(9)) +
  theme_minimal() +
  labs(x = "UMAP_1", y = "UMAP_2", fill = "Cell\nCount") +
  coord_fixed()
```

```{r}
#| label: plot-feature-kim2020
#| fig-width: 32
#| fig-height: 36
FeaturePlot(
  srt,
  features = c(
    "Tshb", "Cck", "Pitx1",
    "Eya1", "Eya2", "Eya3", "Eya4",
    "Sox2", "Hlf", "Tshr",
    "Cckar", "Cckbr", "Gpr173",
    "Foxl2", "Lhx3", "Lhx4", "Pit1", "Gata2"
  ),
  reduction = "ref.umap",
  label = F,
  blend = F,
  order = TRUE,
  pt.size = 1.2,
  raster.dpi = c(1024, 1024),
  alpha = 0.5,
  split.by = "Age"
)
```

```{r}
#| label: plot-prediction-scores-kim2020
#| fig-width: 21
#| fig-height: 5
Idents(srt) <- "predicted.id"
FeaturePlot(
  srt,
  features = c(
    "prediction.score.38",
    "prediction.score.42",
    "prediction.score.45"
  ),
  reduction = "ref.umap",
  label = T,
  repel = T,
  blend = F,
  order = TRUE,
  pt.size = 4,
  raster.dpi = c(1024, 1024),
  alpha = 0.8,
  max.cutoff = "q90",
  ncol = 3
)
```

```{r}
#| label: plot-prediction-scores-split-kim2020
#| fig-width: 32
#| fig-height: 6.353
FeaturePlot(
  srt,
  features = c(
    "prediction.score.38",
    "prediction.score.42",
    "prediction.score.45"
  ),
  reduction = "ref.umap",
  label = F,
  blend = F,
  order = TRUE,
  pt.size = 1.2,
  raster.dpi = c(1024, 1024),
  alpha = 0.8,
  max.cutoff = "q90",
  split.by = "Age"
)
```

```{r}
#| label: plot-prediction-id-kim2020
#| fig-width: 7
#| fig-height: 5
DimPlot(
  srt,
  group.by = c("predicted.id"),
  reduction = "ref.umap",
  label = T,
  repel = T,
  pt.size = 4,
  raster.dpi = c(1024, 1024),
  alpha = 0.5
)
```

```{r}
#| label: plot-prediction-split-kim2020
#| fig-width: 32
#| fig-height: 2.12
DimPlot(
  srt,
  group.by = c("predicted.id"),
  reduction = "ref.umap",
  label = T,
  repel = T,
  pt.size = 1.2,
  raster.dpi = c(1024, 1024),
  alpha = 0.5,
  split.by = "Age"
) + NoLegend()
```

## Quantify and plot hexagon representation of feature interactions with Spearman’s correlation

### Tshb and Eya3 correlation in hypothalamus across different developmental stages

```{r}
#| label: plot-feature-Tshb-Eya3-e10
#| fig-width: 12
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E10"),
  features = c("Tshb", "Eya3"),
  reduction = "ref.umap", blend = F, blend.threshold = 0.3, order = TRUE, pt.size = 2, raster.dpi = c(1024, 1024), alpha = 0.5
)
```

```{r}
#| label: plot-feature-Tshb-Eya3-e11
#| fig-width: 12
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E11"),
  features = c("Tshb", "Eya3"),
  reduction = "ref.umap", blend = F, blend.threshold = 0.3, order = TRUE, pt.size = 2, raster.dpi = c(1024, 1024), alpha = 0.5
)
```

```{r}
#| label: plot-feature-Tshb-Eya3-e12
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E12"),
  features = c("Tshb", "Eya3"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Tshb-Eya3-e13
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E13"),
  features = c("Tshb", "Eya3"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Tshb-Eya3-e14
#| fig-width: 24
#| fig-height: 6
FeaturePlot(
  srt |> subset(Age == "E14"),
  features = c("Tshb", "Eya3"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Tshb-Eya3-e15
#| fig-width: 12
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E15"),
  features = c("Tshb", "Eya3"),
  reduction = "ref.umap", blend = F, blend.threshold = 0.3, order = TRUE, pt.size = 2, raster.dpi = c(1024, 1024), alpha = 0.5
)
```

```{r}
#| label: plot-feature-Tshb-Eya3-e16
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E16"),
  features = c("Tshb", "Eya3"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Tshb-Eya3-e18
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E18"),
  features = c("Tshb", "Eya3"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Tshb-Eya3-p8
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "P8"),
  features = c("Tshb", "Eya3"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Tshb-Eya3-p45
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "P45"),
  features = c("Tshb", "Eya3"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

### Tshb and Pitx1 correlation in hypothalamus across different developmental stages

```{r}
#| label: plot-feature-Tshb-Pitx1-e10
#| fig-width: 12
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E10"),
  features = c("Tshb", "Pitx1"),
  reduction = "ref.umap", blend = F, blend.threshold = 0.3, order = TRUE, pt.size = 2, raster.dpi = c(1024, 1024), alpha = 0.5
)
```

```{r}
#| label: plot-feature-Tshb-Pitx1-e11
#| fig-width: 12
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E11"),
  features = c("Tshb", "Pitx1"),
  reduction = "ref.umap", blend = F, blend.threshold = 0.3, order = TRUE, pt.size = 2, raster.dpi = c(1024, 1024), alpha = 0.5
)
```

```{r}
#| label: plot-feature-Tshb-Pitx1-e12
#| fig-width: 12
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E12"),
  features = c("Tshb", "Pitx1"),
  reduction = "ref.umap", blend = F, blend.threshold = 0.3, order = TRUE, pt.size = 2, raster.dpi = c(1024, 1024), alpha = 0.5
)
```

```{r}
#| label: plot-feature-Tshb-Pitx1-e13
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E13"),
  features = c("Tshb", "Pitx1"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Tshb-Pitx1-e14
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E14"),
  features = c("Tshb", "Pitx1"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Tshb-Pitx1-e15
#| fig-width: 12
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E15"),
  features = c("Tshb", "Pitx1"),
  reduction = "ref.umap", blend = F, blend.threshold = 0.3, order = TRUE, pt.size = 2, raster.dpi = c(1024, 1024), alpha = 0.5
)
```

```{r}
#| label: plot-feature-Tshb-Pitx1-e16
#| fig-width: 12
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E16"),
  features = c("Tshb", "Pitx1"),
  reduction = "ref.umap", blend = F, blend.threshold = 0.3, order = TRUE, pt.size = 2, raster.dpi = c(1024, 1024), alpha = 0.5
)
```

```{r}
#| label: plot-feature-Tshb-Pitx1-e18
#| fig-width: 12
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E18"),
  features = c("Tshb", "Pitx1"),
  reduction = "ref.umap", blend = F, blend.threshold = 0.3, order = TRUE, pt.size = 2, raster.dpi = c(1024, 1024), alpha = 0.5
)
```

```{r}
#| label: plot-feature-Tshb-Pitx1-p8
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "P8"),
  features = c("Tshb", "Pitx1"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Tshb-Pitx1-p45
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "P45"),
  features = c("Tshb", "Pitx1"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

### Cck and Eya3 correlation in hypothalamus across different developmental stages

```{r}
#| label: plot-feature-Cck-Eya3-e10
#| fig-width: 24
#| fig-height: 6
# FeaturePlot(srt |> subset(Age == "E10"), features = c("Cck", "Eya3"),
#   reduction = "ref.umap", blend = TRUE, blend.threshold = 0.3, order = TRUE, pt.size = 2, raster.dpi = c(1024, 1024), alpha = 0.5)
#
# Error in `FeaturePlot()`:
# ! The following features have no value: Cck
```

```{r}
#| label: plot-feature-Cck-Eya3-e11
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E11"),
  features = c("Cck", "Eya3"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Cck-Eya3-e12
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E12"),
  features = c("Cck", "Eya3"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Cck-Eya3-e13
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E13"),
  features = c("Cck", "Eya3"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Cck-Eya3-e14
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E14"),
  features = c("Cck", "Eya3"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Cck-Eya3-e15
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E15"),
  features = c("Cck", "Eya3"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Cck-Eya3-e16
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E16"),
  features = c("Cck", "Eya3"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Cck-Eya3-e18
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E18"),
  features = c("Cck", "Eya3"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Cck-Eya3-p8
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "P8"),
  features = c("Cck", "Eya3"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Cck-Eya3-p45
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "P45"),
  features = c("Cck", "Eya3"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

### Pitx1 and Cck

```{r}
#| label: plot-feature-Cck-Pitx1-e10
#| fig-width: 12
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E10"),
  features = c("Cck", "Pitx1"),
  reduction = "ref.umap", blend = F, blend.threshold = 0.3, order = TRUE, pt.size = 2, raster.dpi = c(1024, 1024), alpha = 0.5
)
```

```{r}
#| label: plot-feature-Cck-Pitx1-e11
#| fig-width: 12
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E11"),
  features = c("Cck", "Pitx1"),
  reduction = "ref.umap", blend = F, blend.threshold = 0.3, order = TRUE, pt.size = 2, raster.dpi = c(1024, 1024), alpha = 0.5
)
```

```{r}
#| label: plot-feature-Cck-Pitx1-e12
#| fig-width: 12
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E12"),
  features = c("Cck", "Pitx1"),
  reduction = "ref.umap", blend = F, blend.threshold = 0.3, order = TRUE, pt.size = 2, raster.dpi = c(1024, 1024), alpha = 0.5
)
```

```{r}
#| label: plot-feature-Cck-Pitx1-e13
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E13"),
  features = c("Cck", "Pitx1"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Cck-Pitx1-e14
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E14"),
  features = c("Cck", "Pitx1"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Cck-Pitx1-e15
#| fig-width: 24
#| fig-height: 6
# FeaturePlot(srt |> subset(Age == "E15"), features = c("Cck", "Pitx1"),
#   reduction = "ref.umap", blend = TRUE, blend.threshold = 0.3, order = TRUE, pt.size = 2, raster.dpi = c(1024, 1024), alpha = 0.5)
#
# Error in `FeaturePlot()`:
# ! The following features have no value: Pitx1
```

```{r}
#| label: plot-feature-Cck-Pitx1-e16
#| fig-width: 24
#| fig-height: 6
# FeaturePlot(srt |> subset(Age == "E16"), features = c("Cck", "Pitx1"),
#   reduction = "ref.umap", blend = TRUE, blend.threshold = 0.3, order = TRUE, pt.size = 2, raster.dpi = c(1024, 1024), alpha = 0.5)
#
# Error in `FeaturePlot()`:
# ! The following features have no value: Pitx1
```

```{r}
#| label: plot-feature-Cck-Pitx1-e18
#| fig-width: 24
#| fig-height: 6
# FeaturePlot(srt |> subset(Age == "E18"), features = c("Cck", "Pitx1"),
#   reduction = "ref.umap", blend = TRUE, blend.threshold = 0.3, order = TRUE, pt.size = 2, raster.dpi = c(1024, 1024), alpha = 0.5)
#
# Error in `FeaturePlot()`:
# ! The following features have no value: Pitx1
```

```{r}
#| label: plot-feature-Cck-Pitx1-p8
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "P8"),
  features = c("Cck", "Pitx1"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Cck-Pitx1-p45
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "P45"),
  features = c("Cck", "Pitx1"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

### Tsh

```{r}
#| label: plot-feature-sox2-Tshb-e10
#| fig-width: 24
#| fig-height: 6
# FeaturePlot(srt |> subset(Age == "E10"), features = c("Sox2", "Tshb"),
#   reduction = "ref.umap", blend = TRUE, blend.threshold = 0.3, order = TRUE, pt.size = 2, raster.dpi = c(1024, 1024), alpha = 0.5)
#
# Error in `FeaturePlot()`:
# ! The following features have no value: Tshb
```

```{r}
#| label: plot-feature-sox2-Tshb-e11
#| fig-width: 24
#| fig-height: 6
# FeaturePlot(srt |> subset(Age == "E11"), features = c("Sox2", "Tshb"),
#   reduction = "ref.umap", blend = TRUE, blend.threshold = 0.3, order = TRUE, pt.size = 2, raster.dpi = c(1024, 1024), alpha = 0.5)
#
# Error in `FeaturePlot()`:
# ! The following features have no value: Tshb
```

```{r}
#| label: plot-feature-sox2-Tshb-e12
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E12"),
  features = c("Sox2", "Tshb"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-sox2-Tshb-e13
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E13"),
  features = c("Sox2", "Tshb"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-sox2-Tshb-e14
#| fig-width: 12
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E14"),
  features = c("Sox2", "Tshb"),
  reduction = "ref.umap", blend = F, label = TRUE, order = TRUE, pt.size = 2, raster.dpi = c(1024, 1024), alpha = 0.5
)
```

```{r}
#| label: plot-feature-sox2-Tshb-e15
#| fig-width: 24
#| fig-height: 6
# FeaturePlot(srt |> subset(Age == "E15"), features = c("Sox2", "Tshb"),
#   reduction = "ref.umap", blend = TRUE, blend.threshold = 0.3, order = TRUE, pt.size = 2, raster.dpi = c(1024, 1024), alpha = 0.5)
#
# Error in `FeaturePlot()`:
# ! The following features have no value: Tshb
```

```{r}
#| label: plot-feature-sox2-Tshb-e16
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E16"),
  features = c("Sox2", "Tshb"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-sox2-Tshb-e18
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E18"),
  features = c("Sox2", "Tshb"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-sox2-Tshb-p8
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "P8"),
  features = c("Sox2", "Tshb"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-sox2-Tshb-p45
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "P45"),
  features = c("Sox2", "Tshb"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

### Tsh

```{r}
#| label: plot-feature-sox2-Cck-e10
#| fig-width: 24
#| fig-height: 6
# FeaturePlot(srt |> subset(Age == "E10"), features = c("Sox2", "Cck"),
#   reduction = "ref.umap", blend = TRUE, blend.threshold = 0.3, order = TRUE, pt.size = 2, raster.dpi = c(1024, 1024), alpha = 0.5)
#
# Error in `FeaturePlot()`:
# ! The following features have no value: Cck
```

```{r}
#| label: plot-feature-sox2-Cck-e11
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E11"),
  features = c("Sox2", "Cck"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-sox2-Cck-e12
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E12"),
  features = c("Sox2", "Cck"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-sox2-Cck-e13
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E13"),
  features = c("Sox2", "Cck"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-sox2-Cck-e14
#| fig-width: 12
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E14"),
  features = c("Sox2", "Cck"),
  reduction = "ref.umap", blend = F, label = TRUE, order = TRUE, pt.size = 2, raster.dpi = c(1024, 1024), alpha = 0.5
)
```

```{r}
#| label: plot-feature-sox2-Cck-e15
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E15"),
  features = c("Sox2", "Cck"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-sox2-Cck-e16
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E16"),
  features = c("Sox2", "Cck"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-sox2-Cck-e18
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E18"),
  features = c("Sox2", "Cck"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-sox2-Cck-p8
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "P8"),
  features = c("Sox2", "Cck"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-sox2-Cck-p45
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "P45"),
  features = c("Sox2", "Cck"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

### Pitx1

```{r}
#| label: plot-feature-sox2-Pitx1-e10
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E10"),
  features = c("Sox2", "Pitx1"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-sox2-Pitx1-e11
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E11"),
  features = c("Sox2", "Pitx1"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-sox2-Pitx1-e12
#| fig-width: 24
#| fig-height: 6
# FeaturePlot(srt |> subset(Age == "E12"), features = c("Sox2", "Pitx1"),
#   reduction = "ref.umap", blend = TRUE, blend.threshold = 0.3, order = TRUE, pt.size = 2, raster.dpi = c(1024, 1024), alpha = 0.5)
#
# Error in `FeaturePlot()`:
# ! The following features have no value: Pitx1
```

```{r}
#| label: plot-feature-sox2-Pitx1-e13
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E13"),
  features = c("Sox2", "Pitx1"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-sox2-Pitx1-e14
#| fig-width: 12
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E14"),
  features = c("Sox2", "Pitx1"),
  reduction = "ref.umap", blend = F, label = TRUE, order = TRUE, pt.size = 2, raster.dpi = c(1024, 1024), alpha = 0.5
)
```

```{r}
#| label: plot-feature-sox2-Pitx1-e15
#| fig-width: 24
#| fig-height: 6
# FeaturePlot(srt |> subset(Age == "E15"), features = c("Sox2", "Pitx1"),
#   reduction = "ref.umap", blend = TRUE, blend.threshold = 0.3, order = TRUE, pt.size = 2, raster.dpi = c(1024, 1024), alpha = 0.5)
#
# Error in `FeaturePlot()`:
# ! The following features have no value: Pitx1
```

```{r}
#| label: plot-feature-sox2-Pitx1-e16
#| fig-width: 24
#| fig-height: 6
# FeaturePlot(srt |> subset(Age == "E16"), features = c("Sox2", "Pitx1"),
#   reduction = "ref.umap", blend = TRUE, blend.threshold = 0.3, order = TRUE, pt.size = 2, raster.dpi = c(1024, 1024), alpha = 0.5)
#
# Error in `FeaturePlot()`:
# ! The following features have no value: Pitx1
```

```{r}
#| label: plot-feature-sox2-Pitx1-e18
#| fig-width: 24
#| fig-height: 6
# FeaturePlot(srt |> subset(Age == "E18"), features = c("Sox2", "Pitx1"),
#   reduction = "ref.umap", blend = TRUE, blend.threshold = 0.3, order = TRUE, pt.size = 2, raster.dpi = c(1024, 1024), alpha = 0.5)
#
# Error in `FeaturePlot()`:
# ! The following features have no value: Pitx1
```

```{r}
#| label: plot-feature-sox2-Pitx1-p8
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "P8"),
  features = c("Sox2", "Pitx1"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-sox2-Pitx1-p45
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "P45"),
  features = c("Sox2", "Pitx1"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

### Hlf

```{r}
#| label: plot-feature-Eya3-Hlf-e10
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E10"),
  features = c("Eya3", "Hlf"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Eya3-Hlf-e11
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E11"),
  features = c("Eya3", "Hlf"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Eya3-Hlf-e12
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E12"),
  features = c("Eya3", "Hlf"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Eya3-Hlf-e13
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E13"),
  features = c("Eya3", "Hlf"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Eya3-Hlf-e14
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E14"),
  features = c("Eya3", "Hlf"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Eya3-Hlf-e15
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E15"),
  features = c("Eya3", "Hlf"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Eya3-Hlf-e16
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E16"),
  features = c("Eya3", "Hlf"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Eya3-Hlf-e18
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E18"),
  features = c("Eya3", "Hlf"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Eya3-Hlf-p8
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "P8"),
  features = c("Eya3", "Hlf"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Eya3-Hlf-p45
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "P45"),
  features = c("Eya3", "Hlf"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

### Igfbp5

```{r}
#| label: plot-feature-Eya3-Igfbp5-e10
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E10"),
  features = c("Eya3", "Igfbp5"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Eya3-Igfbp5-e11
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E11"),
  features = c("Eya3", "Igfbp5"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Eya3-Igfbp5-e12
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E12"),
  features = c("Eya3", "Igfbp5"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Eya3-Igfbp5-e13
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E13"),
  features = c("Eya3", "Igfbp5"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Eya3-Igfbp5-e14
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E14"),
  features = c("Eya3", "Igfbp5"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Eya3-Igfbp5-e15
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E15"),
  features = c("Eya3", "Igfbp5"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Eya3-Igfbp5-e16
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E16"),
  features = c("Eya3", "Igfbp5"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Eya3-Igfbp5-e18
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E18"),
  features = c("Eya3", "Igfbp5"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Eya3-Igfbp5-p8
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "P8"),
  features = c("Eya3", "Igfbp5"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Eya3-Igfbp5-p45
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "P45"),
  features = c("Eya3", "Igfbp5"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

### Sox2 and Tshr correlation in hypothalamus across different developmental stages

```{r}
#| label: plot-feature-sox2-tshr-e10
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E10"),
  features = c("Sox2", "Tshr"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-sox2-tshr-e11
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E11"),
  features = c("Sox2", "Tshr"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-sox2-tshr-e12
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E12"),
  features = c("Sox2", "Tshr"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-sox2-tshr-e13
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E13"),
  features = c("Sox2", "Tshr"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-sox2-tshr-e14
#| fig-width: 12
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E14"),
  features = c("Sox2", "Tshr"),
  reduction = "ref.umap", blend = F, label = TRUE, order = TRUE, pt.size = 2, raster.dpi = c(1024, 1024), alpha = 0.5
)
```

```{r}
#| label: plot-feature-sox2-tshr-e15
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E15"),
  features = c("Sox2", "Tshr"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-sox2-tshr-e16
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E16"),
  features = c("Sox2", "Tshr"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-sox2-tshr-e18
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E18"),
  features = c("Sox2", "Tshr"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-sox2-tshr-p8
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "P8"),
  features = c("Sox2", "Tshr"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-sox2-tshr-p45
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "P45"),
  features = c("Sox2", "Tshr"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

### Sox2 and Gpr173 correlation in hypothalamus across different developmental stages

```{r}
#| label: plot-feature-sox2-Gpr173-e10
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E10"),
  features = c("Sox2", "Gpr173"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-sox2-Gpr173-e11
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E11"),
  features = c("Sox2", "Gpr173"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-sox2-Gpr173-e12
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E12"),
  features = c("Sox2", "Gpr173"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-sox2-Gpr173-e13
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E13"),
  features = c("Sox2", "Gpr173"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-sox2-Gpr173-e14
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E14"),
  features = c("Sox2", "Gpr173"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-sox2-Gpr173-e15
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E15"),
  features = c("Sox2", "Gpr173"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-sox2-Gpr173-e16
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E16"),
  features = c("Sox2", "Gpr173"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-sox2-Gpr173-e18
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E18"),
  features = c("Sox2", "Gpr173"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-sox2-Gpr173-p8
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "P8"),
  features = c("Sox2", "Gpr173"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-sox2-Gpr173-p45
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "P45"),
  features = c("Sox2", "Gpr173"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

### Sox2 and Cckbr correlation in hypothalamus across different developmental stages

```{r}
#| label: plot-feature-sox2-Cckbr-e10
#| fig-width: 12
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E10"),
  features = c("Sox2", "Cckbr"),
  reduction = "ref.umap", blend = F, label = TRUE, order = TRUE, pt.size = 2, raster.dpi = c(1024, 1024), alpha = 0.5
)
```

```{r}
#| label: plot-feature-sox2-Cckbr-e11
#| fig-width: 12
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E11"),
  features = c("Sox2", "Cckbr"),
  reduction = "ref.umap", blend = F, label = TRUE, order = TRUE, pt.size = 2, raster.dpi = c(1024, 1024), alpha = 0.5
)
```

```{r}
#| label: plot-feature-sox2-Cckbr-e12
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E12"),
  features = c("Sox2", "Cckbr"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-sox2-Cckbr-e13
#| fig-width: 12
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E13"),
  features = c("Sox2", "Cckbr"),
  reduction = "ref.umap", blend = F, label = TRUE, order = TRUE, pt.size = 2, raster.dpi = c(1024, 1024), alpha = 0.5
)
```

```{r}
#| label: plot-feature-sox2-Cckbr-e14
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E14"),
  features = c("Sox2", "Cckbr"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-sox2-Cckbr-e15
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E15"),
  features = c("Sox2", "Cckbr"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-sox2-Cckbr-e16
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E16"),
  features = c("Sox2", "Cckbr"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-sox2-Cckbr-e18
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E18"),
  features = c("Sox2", "Cckbr"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-sox2-Cckbr-p8
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "P8"),
  features = c("Sox2", "Cckbr"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-sox2-Cckbr-p45
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "P45"),
  features = c("Sox2", "Cckbr"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

### Tshr and Gpr173 correlation in hypothalamus across different developmental stages

```{r}
#| label: plot-feature-Tshr-Gpr173-e10
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E10"),
  features = c("Tshr", "Gpr173"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Tshr-Gpr173-e11
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E11"),
  features = c("Tshr", "Gpr173"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Tshr-Gpr173-e12
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E12"),
  features = c("Tshr", "Gpr173"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Tshr-Gpr173-e13
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E13"),
  features = c("Tshr", "Gpr173"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Tshr-Gpr173-e14
#| fig-width: 12
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E14"),
  features = c("Tshr", "Gpr173"),
  reduction = "ref.umap", blend = F, label = TRUE, order = TRUE, pt.size = 2, raster.dpi = c(1024, 1024), alpha = 0.5
)
```

```{r}
#| label: plot-feature-Tshr-Gpr173-e15
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E15"),
  features = c("Tshr", "Gpr173"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Tshr-Gpr173-e16
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E16"),
  features = c("Tshr", "Gpr173"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Tshr-Gpr173-e18
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E18"),
  features = c("Tshr", "Gpr173"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Tshr-Gpr173-p8
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "P8"),
  features = c("Tshr", "Gpr173"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Tshr-Gpr173-p45
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "P45"),
  features = c("Tshr", "Gpr173"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

### Tshr and Cckbr correlation in hypothalamus across different developmental stages

```{r}
#| label: plot-feature-Tshr-Cckbr-e10
#| fig-width: 12
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E10"),
  features = c("Tshr", "Cckbr"),
  reduction = "ref.umap", blend = F, label = TRUE, order = TRUE, pt.size = 2, raster.dpi = c(1024, 1024), alpha = 0.5
)
```

```{r}
#| label: plot-feature-Tshr-Cckbr-e11
#| fig-width: 12
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E11"),
  features = c("Tshr", "Cckbr"),
  reduction = "ref.umap", blend = F, label = TRUE, order = TRUE, pt.size = 2, raster.dpi = c(1024, 1024), alpha = 0.5
)
```

```{r}
#| label: plot-feature-Tshr-Cckbr-e12
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E12"),
  features = c("Tshr", "Cckbr"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Tshr-Cckbr-e13
#| fig-width: 12
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E13"),
  features = c("Tshr", "Cckbr"),
  reduction = "ref.umap", blend = F, label = TRUE, order = TRUE, pt.size = 2, raster.dpi = c(1024, 1024), alpha = 0.5
)
```

```{r}
#| label: plot-feature-Tshr-Cckbr-e14
#| fig-width: 12
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E14"),
  features = c("Tshr", "Cckbr"),
  reduction = "ref.umap", blend = F, label = TRUE, order = TRUE, pt.size = 2, raster.dpi = c(1024, 1024), alpha = 0.5
)
```

```{r}
#| label: plot-feature-Tshr-Cckbr-e15
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E15"),
  features = c("Tshr", "Cckbr"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Tshr-Cckbr-e16
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E16"),
  features = c("Tshr", "Cckbr"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Tshr-Cckbr-e18
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E18"),
  features = c("Tshr", "Cckbr"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Tshr-Cckbr-p8
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "P8"),
  features = c("Tshr", "Cckbr"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Tshr-Cckbr-p45
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "P45"),
  features = c("Tshr", "Cckbr"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

### Gpr173 and Cckbr correlation in hypothalamus across different developmental stages

```{r}
#| label: plot-feature-Cckbr-Gpr173-e10
#| fig-width: 12
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E10"),
  features = c("Cckbr", "Gpr173"),
  reduction = "ref.umap", blend = F, label = TRUE, order = TRUE, pt.size = 2, raster.dpi = c(1024, 1024), alpha = 0.5
)
```

```{r}
#| label: plot-feature-Cckbr-Gpr173-e11
#| fig-width: 12
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E11"),
  features = c("Cckbr", "Gpr173"),
  reduction = "ref.umap", blend = F, label = TRUE, order = TRUE, pt.size = 2, raster.dpi = c(1024, 1024), alpha = 0.5
)
```

```{r}
#| label: plot-feature-Cckbr-Gpr173-e12
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E12"),
  features = c("Cckbr", "Gpr173"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Cckbr-Gpr173-e13
#| fig-width: 12
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E13"),
  features = c("Cckbr", "Gpr173"),
  reduction = "ref.umap", blend = F, label = TRUE, order = TRUE, pt.size = 2, raster.dpi = c(1024, 1024), alpha = 0.5
)
```

```{r}
#| label: plot-feature-Cckbr-Gpr173-e14
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E14"),
  features = c("Cckbr", "Gpr173"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Cckbr-Gpr173-e15
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E15"),
  features = c("Cckbr", "Gpr173"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Cckbr-Gpr173-e16
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E16"),
  features = c("Cckbr", "Gpr173"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Cckbr-Gpr173-e18
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "E18"),
  features = c("Cckbr", "Gpr173"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Cckbr-Gpr173-p8
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "P8"),
  features = c("Cckbr", "Gpr173"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

```{r}
#| label: plot-feature-Cckbr-Gpr173-p45
#| fig-width: 24
#| fig-height: 6
FeaturePlot(srt |> subset(Age == "P45"),
  features = c("Cckbr", "Gpr173"),
  reduction = "ref.umap",
  blend = TRUE,
  blend.threshold = 0.4,
  max.cutoff = "q95",
  pt.size = 1.5,
  cols = c("grey98", "red", "blue"),
  order = T,
  alpha = 0.35,
  raster.dpi = c(1024, 1024)
)
```

## Barplot of Sox2 and Tshr expression in hypothalamus across different developmental stages

```{r}
#| label: plot-sox2-tshr-bargraph
#| fig-width: 7
#| fig-height: 6
# Create a new variable that combines Sox2_pos and Tshr_pos
df <- sbs_mtx %>%
  mutate(Age = factor(Age, levels = c("E10", "E11", "E12", "E13", "E14", "E15", "E16", "E18", "P4", "P8", "P14", "P45"), ordered = TRUE), VarComb = case_when(
    Sox2_pos & Tshr_pos ~ "Sox2+/Tshr+",
    Sox2_pos & !Tshr_pos ~ "Sox2+/Tshr-",
    !Sox2_pos & Tshr_pos ~ "Sox2-/Tshr+",
    !Sox2_pos & !Tshr_pos ~ "Sox2-/Tshr-"
  ))

# Calculate counts and proportions for each category
df_counts <- df %>%
  group_by(Age, VarComb) %>%
  summarise(n = n()) %>%
  mutate(prop = n / sum(n))

# Calculate the total counts for each category
df_total_counts <- df %>%
  group_by(Age) %>%
  summarise(total_n = n())

# Create a vector of Age names ordered by prop for Sox2+/Tshr+ cases for each Age
ordered_Ages <- df_counts %>%
  filter(VarComb == "Sox2+/Tshr-") %>%
  arrange(desc(prop)) %>%
  pull(Age)

# Reorder the factor levels of Age
df_counts$Age <- factor(df_counts$Age, levels = ordered_Ages)
df_total_counts$Age <- factor(df_total_counts$Age, levels = ordered_Ages)

# Reorder the factor levels of combinations
df_counts$VarComb <- factor(df_counts$VarComb, levels = rev(c("Sox2+/Tshr-", "Sox2+/Tshr+", "Sox2-/Tshr+", "Sox2-/Tshr-")))

# Create a stacked bar plot
ggplot(df_counts, aes(x = Age, y = n, fill = VarComb)) +
  geom_bar(stat = "identity", color = "black") +
  scale_fill_manual(values = c("Sox2+/Tshr+" = "purple", "Sox2+/Tshr-" = "red3", "Sox2-/Tshr+" = "royalblue", "Sox2-/Tshr-" = "grey50")) +
  labs(x = "Hypothalamic subAge", y = "Number of cells", fill = "Expression") +
  theme_minimal() +
  scale_x_discrete(labels = c("E10", "E11", "E12", "E13", "E14", "E15", "E16", "E18", "P4", "P8", "P14", "P45"))

ggplot(df_counts, aes(x = Age, y = prop, fill = VarComb)) +
  geom_bar(stat = "identity", color = "black", position = "fill") +
  scale_fill_manual(values = c("Sox2+/Tshr-" = "red3", "Sox2+/Tshr+" = "purple", "Sox2-/Tshr+" = "royalblue", "Sox2-/Tshr-" = "grey50")) +
  labs(x = "Hypothalamic subAge", y = "Proportion of cells", fill = "Expression") +
  theme_minimal() +
  scale_x_discrete(labels = c("E10", "E11", "E12", "E13", "E14", "E15", "E16", "E18", "P4", "P8", "P14", "P45"))

ggplot(df_counts |> filter(!VarComb %in% c("Sox2-/Tshr-", "Sox2+/Tshr-")), aes(x = Age, y = n, fill = VarComb)) +
  geom_bar(stat = "identity", color = "black") +
  scale_fill_manual(values = c("Sox2+/Tshr+" = "purple", "Sox2+/Tshr-" = "red3", "Sox2-/Tshr+" = "royalblue", "Sox2-/Tshr-" = "grey50")) +
  labs(x = "Hypothalamic subAge", y = "Number of cells", fill = "Expression") +
  theme_minimal() +
  scale_x_discrete(labels = c("E10", "E11", "E12", "E13", "E14", "E15", "E16", "E18", "P4", "P8", "P14", "P45"))

ggplot(df_counts |> filter(!VarComb %in% c("Sox2-/Tshr-", "Sox2+/Tshr-")), aes(x = Age, y = prop, fill = VarComb)) +
  geom_bar(stat = "identity", color = "black", position = "fill") +
  scale_fill_manual(values = c("Sox2+/Tshr-" = "red3", "Sox2+/Tshr+" = "purple", "Sox2-/Tshr+" = "royalblue", "Sox2-/Tshr-" = "grey50")) +
  labs(x = "Hypothalamic subAge", y = "Proportion of cells", fill = "Expression") +
  theme_minimal() +
  scale_x_discrete(labels = c("E10", "E11", "E12", "E13", "E14", "E15", "E16", "E18", "P4", "P8", "P14", "P45"))
```

# Calculate and plot chi2 test of independence between Sox2 and Cckbr expression in hypothalamus across different developmental stages

```{r}
#| label: get-goi-sox2-Cckbr
sbs_mtx <- GetAssayData(object = srt, layer = "counts", assay = "RNA")[c("Sox2", "Cckbr"), ] %>%
  as.data.frame() %>%
  t() %>%
  as.data.frame() %>%
  select(Sox2, Cckbr) %>%
  dplyr::bind_cols(srt@meta.data) %>%
  select(Age, Sox2, Cckbr) %>%
  mutate(
    Sox2_pos = Sox2 > 0,
    Cckbr_pos = Cckbr > 0
  )

sbs_mtx %>% skimr::skim()
```

```{r}
#| label: sox2-Cckbr-stats
#| fig-width: 8
#| fig-height: 24
write_csv(sbs_mtx, here(tables_dir, "Sox2-Cckbr-expression-status-between-Ages-on-evaluation-datasets.csv"))


# plot
grouped_ggpiestats(
  # arguments relevant for `ggpiestats()`
  data = sbs_mtx,
  x = Cckbr_pos,
  y = Sox2_pos,
  grouping.var = Age,
  perc.k = 1,
  package = "ggsci",
  palette = "category10_d3",
  # arguments relevant for `combine_plots()`
  title.text = "Sox2 specification of Cckbr-positive hypothalamic development",
  caption.text = "Asterisks denote results from proportion tests; \n***: p < 0.001, ns: non-significant",
  plotgrid.args = list(nrow = 8)
)
```

## Barplot of Sox2 and Cckbr expression in hypothalamus across different developmental stages

```{r}
#| label: plot-sox2-Cckbr-bargraph
#| fig-width: 7
#| fig-height: 6
# Create a new variable that combines Sox2_pos and Cckbr_pos
df <- sbs_mtx %>%
  mutate(Age = factor(Age, levels = c("E10", "E11", "E12", "E13", "E14", "E15", "E16", "E18", "P4", "P8", "P14", "P45"), ordered = TRUE), VarComb = case_when(
    Sox2_pos & Cckbr_pos ~ "Sox2+/Cckbr+",
    Sox2_pos & !Cckbr_pos ~ "Sox2+/Cckbr-",
    !Sox2_pos & Cckbr_pos ~ "Sox2-/Cckbr+",
    !Sox2_pos & !Cckbr_pos ~ "Sox2-/Cckbr-"
  ))

# Calculate counts and proportions for each category
df_counts <- df %>%
  group_by(Age, VarComb) %>%
  summarise(n = n()) %>%
  mutate(prop = n / sum(n))

# Calculate the total counts for each category
df_total_counts <- df %>%
  group_by(Age) %>%
  summarise(total_n = n())

# Create a vector of Age names ordered by prop for Sox2+/Cckbr+ cases for each Age
ordered_Ages <- df_counts %>%
  filter(VarComb == "Sox2+/Cckbr-") %>%
  arrange(desc(prop)) %>%
  pull(Age)

# Reorder the factor levels of Age
df_counts$Age <- factor(df_counts$Age, levels = ordered_Ages)
df_total_counts$Age <- factor(df_total_counts$Age, levels = ordered_Ages)

# Reorder the factor levels of combinations
df_counts$VarComb <- factor(df_counts$VarComb, levels = rev(c("Sox2+/Cckbr-", "Sox2+/Cckbr+", "Sox2-/Cckbr+", "Sox2-/Cckbr-")))

# Create a stacked bar plot
ggplot(df_counts, aes(x = Age, y = n, fill = VarComb)) +
  geom_bar(stat = "identity", color = "black") +
  scale_fill_manual(values = c("Sox2+/Cckbr+" = "yellow", "Sox2+/Cckbr-" = "red3", "Sox2-/Cckbr+" = "green", "Sox2-/Cckbr-" = "grey50")) +
  labs(x = "Hypothalamic subAge", y = "Number of cells", fill = "Expression") +
  theme_minimal() +
  scale_x_discrete(labels = c("E10", "E11", "E12", "E13", "E14", "E15", "E16", "E18", "P4", "P8", "P14", "P45"))

ggplot(df_counts, aes(x = Age, y = prop, fill = VarComb)) +
  geom_bar(stat = "identity", color = "black", position = "fill") +
  scale_fill_manual(values = c("Sox2+/Cckbr-" = "red3", "Sox2+/Cckbr+" = "yellow", "Sox2-/Cckbr+" = "green", "Sox2-/Cckbr-" = "grey50")) +
  labs(x = "Hypothalamic subAge", y = "Proportion of cells", fill = "Expression") +
  theme_minimal() +
  scale_x_discrete(labels = c("E10", "E11", "E12", "E13", "E14", "E15", "E16", "E18", "P4", "P8", "P14", "P45"))

ggplot(df_counts |> filter(!VarComb %in% c("Sox2-/Cckbr-", "Sox2+/Cckbr-")), aes(x = Age, y = n, fill = VarComb)) +
  geom_bar(stat = "identity", color = "black") +
  scale_fill_manual(values = c("Sox2+/Cckbr+" = "yellow", "Sox2+/Cckbr-" = "red3", "Sox2-/Cckbr+" = "green", "Sox2-/Cckbr-" = "grey50")) +
  labs(x = "Hypothalamic subAge", y = "Number of cells", fill = "Expression") +
  theme_minimal() +
  scale_x_discrete(labels = c("E10", "E11", "E12", "E13", "E14", "E15", "E16", "E18", "P4", "P8", "P14", "P45"))

ggplot(df_counts |> filter(!VarComb %in% c("Sox2-/Cckbr-", "Sox2+/Cckbr-")), aes(x = Age, y = prop, fill = VarComb)) +
  geom_bar(stat = "identity", color = "black", position = "fill") +
  scale_fill_manual(values = c("Sox2+/Cckbr-" = "red3", "Sox2+/Cckbr+" = "yellow", "Sox2-/Cckbr+" = "green", "Sox2-/Cckbr-" = "grey50")) +
  labs(x = "Hypothalamic subAge", y = "Proportion of cells", fill = "Expression") +
  theme_minimal() +
  scale_x_discrete(labels = c("E10", "E11", "E12", "E13", "E14", "E15", "E16", "E18", "P4", "P8", "P14", "P45"))
```

# Calculate and plot chi2 test of independence between Cckbr and Tshr expression in hypothalamus across different developmental stages

```{r}
#| label: get-goi-Cckbr-tshr
sbs_mtx <- GetAssayData(object = srt, layer = "counts", assay = "RNA")[c("Cckbr", "Tshr"), ] %>%
  as.data.frame() %>%
  t() %>%
  as.data.frame() %>%
  select(Cckbr, Tshr) %>%
  dplyr::bind_cols(srt@meta.data) %>%
  select(Age, Cckbr, Tshr) %>%
  mutate(
    Cckbr_pos = Cckbr > 0,
    Tshr_pos = Tshr > 0
  )

sbs_mtx %>% skimr::skim()
```

```{r}
#| label: Cckbr-tshr-stats
#| fig-width: 8
#| fig-height: 24
write_csv(sbs_mtx, here(tables_dir, "Cckbr-Tshr-expression-status-between-Ages-on-evaluation-datasets.csv"))


# plot
grouped_ggpiestats(
  # arguments relevant for `ggpiestats()`
  data = sbs_mtx,
  x = Cckbr_pos,
  y = Tshr_pos,
  grouping.var = Age,
  perc.k = 1,
  package = "ggsci",
  palette = "category10_d3",
  # arguments relevant for `combine_plots()`
  title.text = "Cckbr specification of Tshr-positive hypothalamic development",
  caption.text = "Asterisks denote results from proportion tests; \n***: p < 0.001, ns: non-significant",
  plotgrid.args = list(nrow = 8)
)
```

## Barplot of Cckbr and Tshr expression in hypothalamus across different developmental stages

```{r}
#| label: plot-Cckbr-tshr-bargraph
#| fig-width: 7
#| fig-height: 6
# Create a new variable that combines Cckbr_pos and Tshr_pos
df <- sbs_mtx %>%
  mutate(Age = factor(Age, levels = c("E10", "E11", "E12", "E13", "E14", "E15", "E16", "E18", "P4", "P8", "P14", "P45"), ordered = TRUE), VarComb = case_when(
    Cckbr_pos & Tshr_pos ~ "Cckbr+/Tshr+",
    Cckbr_pos & !Tshr_pos ~ "Cckbr+/Tshr-",
    !Cckbr_pos & Tshr_pos ~ "Cckbr-/Tshr+",
    !Cckbr_pos & !Tshr_pos ~ "Cckbr-/Tshr-"
  ))

# Calculate counts and proportions for each category
df_counts <- df %>%
  group_by(Age, VarComb) %>%
  summarise(n = n()) %>%
  mutate(prop = n / sum(n))

# Calculate the total counts for each category
df_total_counts <- df %>%
  group_by(Age) %>%
  summarise(total_n = n())

# Create a vector of Age names ordered by prop for Cckbr+/Tshr+ cases for each Age
ordered_Ages <- df_counts %>%
  filter(VarComb == "Cckbr+/Tshr-") %>%
  arrange(desc(prop)) %>%
  pull(Age)

# Reorder the factor levels of Age
df_counts$Age <- factor(df_counts$Age, levels = ordered_Ages)
df_total_counts$Age <- factor(df_total_counts$Age, levels = ordered_Ages)

# Reorder the factor levels of combinations
df_counts$VarComb <- factor(df_counts$VarComb, levels = rev(c("Cckbr+/Tshr-", "Cckbr+/Tshr+", "Cckbr-/Tshr+", "Cckbr-/Tshr-")))

# Create a stacked bar plot
ggplot(df_counts, aes(x = Age, y = n, fill = VarComb)) +
  geom_bar(stat = "identity", color = "black") +
  scale_fill_manual(values = c("Cckbr+/Tshr+" = "cyan", "Cckbr+/Tshr-" = "green", "Cckbr-/Tshr+" = "royalblue", "Cckbr-/Tshr-" = "grey50")) +
  labs(x = "Hypothalamic subAge", y = "Number of cells", fill = "Expression") +
  theme_minimal() +
  scale_x_discrete(labels = c("E10", "E11", "E12", "E13", "E14", "E15", "E16", "E18", "P4", "P8", "P14", "P45"))

ggplot(df_counts, aes(x = Age, y = prop, fill = VarComb)) +
  geom_bar(stat = "identity", color = "black", position = "fill") +
  scale_fill_manual(values = c("Cckbr+/Tshr-" = "green", "Cckbr+/Tshr+" = "cyan", "Cckbr-/Tshr+" = "royalblue", "Cckbr-/Tshr-" = "grey50")) +
  labs(x = "Hypothalamic subAge", y = "Proportion of cells", fill = "Expression") +
  theme_minimal() +
  scale_x_discrete(labels = c("E10", "E11", "E12", "E13", "E14", "E15", "E16", "E18", "P4", "P8", "P14", "P45"))

ggplot(df_counts |> filter(!VarComb %in% c("Cckbr-/Tshr-", "Cckbr+/Tshr-")), aes(x = Age, y = n, fill = VarComb)) +
  geom_bar(stat = "identity", color = "black") +
  scale_fill_manual(values = c("Cckbr+/Tshr+" = "cyan", "Cckbr+/Tshr-" = "green", "Cckbr-/Tshr+" = "royalblue", "Cckbr-/Tshr-" = "grey50")) +
  labs(x = "Hypothalamic subAge", y = "Number of cells", fill = "Expression") +
  theme_minimal() +
  scale_x_discrete(labels = c("E10", "E11", "E12", "E13", "E14", "E15", "E16", "E18", "P4", "P8", "P14", "P45"))

ggplot(df_counts |> filter(!VarComb %in% c("Cckbr-/Tshr-", "Cckbr+/Tshr-")), aes(x = Age, y = prop, fill = VarComb)) +
  geom_bar(stat = "identity", color = "black", position = "fill") +
  scale_fill_manual(values = c("Cckbr+/Tshr-" = "green", "Cckbr+/Tshr+" = "cyan", "Cckbr-/Tshr+" = "royalblue", "Cckbr-/Tshr-" = "grey50")) +
  labs(x = "Hypothalamic subAge", y = "Proportion of cells", fill = "Expression") +
  theme_minimal() +
  scale_x_discrete(labels = c("E10", "E11", "E12", "E13", "E14", "E15", "E16", "E18", "P4", "P8", "P14", "P45"))
```

# Calculate and plot chi2 test of independence between Sox2 and Gpr173 expression in hypothalamus across different developmental stages

```{r}
#| label: get-goi-sox2-Gpr173
sbs_mtx <- GetAssayData(object = srt, layer = "counts", assay = "RNA")[c("Sox2", "Gpr173"), ] %>%
  as.data.frame() %>%
  t() %>%
  as.data.frame() %>%
  select(Sox2, Gpr173) %>%
  dplyr::bind_cols(srt@meta.data) %>%
  select(Age, Sox2, Gpr173) %>%
  mutate(
    Sox2_pos = Sox2 > 0,
    Gpr173_pos = Gpr173 > 0
  )

sbs_mtx %>% skimr::skim()
```

```{r}
#| label: sox2-Gpr173-stats
#| fig-width: 8
#| fig-height: 24
write_csv(sbs_mtx, here(tables_dir, "Sox2-Gpr173-expression-status-between-Ages-on-evaluation-datasets.csv"))


# plot
grouped_ggpiestats(
  # arguments relevant for `ggpiestats()`
  data = sbs_mtx,
  x = Gpr173_pos,
  y = Sox2_pos,
  grouping.var = Age,
  perc.k = 1,
  package = "ggsci",
  palette = "category10_d3",
  # arguments relevant for `combine_plots()`
  title.text = "Sox2 specification of Gpr173-positive hypothalamic development",
  caption.text = "Asterisks denote results from proportion tests; \n***: p < 0.001, ns: non-significant",
  plotgrid.args = list(nrow = 8)
)
```

## Barplot of Sox2 and Gpr173 expression in hypothalamus across different developmental stages

```{r}
#| label: plot-sox2-Gpr173-bargraph
#| fig-width: 7
#| fig-height: 6
# Create a new variable that combines Sox2_pos and Gpr173_pos
df <- sbs_mtx %>%
  mutate(Age = factor(Age, levels = c("E10", "E11", "E12", "E13", "E14", "E15", "E16", "E18", "P4", "P8", "P14", "P45"), ordered = TRUE), VarComb = case_when(
    Sox2_pos & Gpr173_pos ~ "Sox2+/Gpr173+",
    Sox2_pos & !Gpr173_pos ~ "Sox2+/Gpr173-",
    !Sox2_pos & Gpr173_pos ~ "Sox2-/Gpr173+",
    !Sox2_pos & !Gpr173_pos ~ "Sox2-/Gpr173-"
  ))

# Calculate counts and proportions for each category
df_counts <- df %>%
  group_by(Age, VarComb) %>%
  summarise(n = n()) %>%
  mutate(prop = n / sum(n))

# Calculate the total counts for each category
df_total_counts <- df %>%
  group_by(Age) %>%
  summarise(total_n = n())

# Create a vector of Age names ordered by prop for Sox2+/Gpr173+ cases for each Age
ordered_Ages <- df_counts %>%
  filter(VarComb == "Sox2+/Gpr173-") %>%
  arrange(desc(prop)) %>%
  pull(Age)

# Reorder the factor levels of Age
df_counts$Age <- factor(df_counts$Age, levels = ordered_Ages)
df_total_counts$Age <- factor(df_total_counts$Age, levels = ordered_Ages)

# Reorder the factor levels of combinations
df_counts$VarComb <- factor(df_counts$VarComb, levels = rev(c("Sox2+/Gpr173-", "Sox2+/Gpr173+", "Sox2-/Gpr173+", "Sox2-/Gpr173-")))

# Create a stacked bar plot
ggplot(df_counts, aes(x = Age, y = n, fill = VarComb)) +
  geom_bar(stat = "identity", color = "black") +
  scale_fill_manual(values = c("Sox2+/Gpr173+" = "deeppink", "Sox2+/Gpr173-" = "red3", "Sox2-/Gpr173+" = "orchid", "Sox2-/Gpr173-" = "grey50")) +
  labs(x = "Hypothalamic subAge", y = "Number of cells", fill = "Expression") +
  theme_minimal() +
  scale_x_discrete(labels = c("E10", "E11", "E12", "E13", "E14", "E15", "E16", "E18", "P4", "P8", "P14", "P45"))

ggplot(df_counts, aes(x = Age, y = prop, fill = VarComb)) +
  geom_bar(stat = "identity", color = "black", position = "fill") +
  scale_fill_manual(values = c("Sox2+/Gpr173-" = "red3", "Sox2+/Gpr173+" = "deeppink", "Sox2-/Gpr173+" = "orchid", "Sox2-/Gpr173-" = "grey50")) +
  labs(x = "Hypothalamic subAge", y = "Proportion of cells", fill = "Expression") +
  theme_minimal() +
  scale_x_discrete(labels = c("E10", "E11", "E12", "E13", "E14", "E15", "E16", "E18", "P4", "P8", "P14", "P45"))

ggplot(df_counts |> filter(!VarComb %in% c("Sox2-/Gpr173-", "Sox2+/Gpr173-")), aes(x = Age, y = n, fill = VarComb)) +
  geom_bar(stat = "identity", color = "black") +
  scale_fill_manual(values = c("Sox2+/Gpr173+" = "deeppink", "Sox2+/Gpr173-" = "red3", "Sox2-/Gpr173+" = "orchid", "Sox2-/Gpr173-" = "grey50")) +
  labs(x = "Hypothalamic subAge", y = "Number of cells", fill = "Expression") +
  theme_minimal() +
  scale_x_discrete(labels = c("E10", "E11", "E12", "E13", "E14", "E15", "E16", "E18", "P4", "P8", "P14", "P45"))

ggplot(df_counts |> filter(!VarComb %in% c("Sox2-/Gpr173-", "Sox2+/Gpr173-")), aes(x = Age, y = prop, fill = VarComb)) +
  geom_bar(stat = "identity", color = "black", position = "fill") +
  scale_fill_manual(values = c("Sox2+/Gpr173-" = "red3", "Sox2+/Gpr173+" = "deeppink", "Sox2-/Gpr173+" = "orchid", "Sox2-/Gpr173-" = "grey50")) +
  labs(x = "Hypothalamic subAge", y = "Proportion of cells", fill = "Expression") +
  theme_minimal() +
  scale_x_discrete(labels = c("E10", "E11", "E12", "E13", "E14", "E15", "E16", "E18", "P4", "P8", "P14", "P45"))
```

# Calculate and plot chi2 test of independence between Gpr173 and Tshr expression in hypothalamus across different developmental stages

```{r}
#| label: get-goi-Gpr173-tshr
sbs_mtx <- GetAssayData(object = srt, layer = "counts", assay = "RNA")[c("Gpr173", "Tshr"), ] %>%
  as.data.frame() %>%
  t() %>%
  as.data.frame() %>%
  select(Gpr173, Tshr) %>%
  dplyr::bind_cols(srt@meta.data) %>%
  select(Age, Gpr173, Tshr) %>%
  mutate(
    Gpr173_pos = Gpr173 > 0,
    Tshr_pos = Tshr > 0
  )

sbs_mtx %>% skimr::skim()
```

```{r}
#| label: Gpr173-tshr-stats
#| fig-width: 8
#| fig-height: 24
write_csv(sbs_mtx, here(tables_dir, "Gpr173-Tshr-expression-status-between-Ages-on-evaluation-datasets.csv"))


# plot
grouped_ggpiestats(
  # arguments relevant for `ggpiestats()`
  data = sbs_mtx,
  x = Gpr173_pos,
  y = Tshr_pos,
  grouping.var = Age,
  perc.k = 1,
  package = "ggsci",
  palette = "category10_d3",
  # arguments relevant for `combine_plots()`
  title.text = "Gpr173 specification of Tshr-positive hypothalamic development",
  caption.text = "Asterisks denote results from proportion tests; \n***: p < 0.001, ns: non-significant",
  plotgrid.args = list(nrow = 8)
)
```

## Barplot of Gpr173 and Tshr expression in hypothalamus across different developmental stages

```{r}
#| label: plot-Gpr173-tshr-bargraph
#| fig-width: 7
#| fig-height: 6
# Create a new variable that combines Gpr173_pos and Tshr_pos
df <- sbs_mtx %>%
  mutate(Age = factor(Age, levels = c("E10", "E11", "E12", "E13", "E14", "E15", "E16", "E18", "P4", "P8", "P14", "P45"), ordered = TRUE), VarComb = case_when(
    Gpr173_pos & Tshr_pos ~ "Gpr173+/Tshr+",
    Gpr173_pos & !Tshr_pos ~ "Gpr173+/Tshr-",
    !Gpr173_pos & Tshr_pos ~ "Gpr173-/Tshr+",
    !Gpr173_pos & !Tshr_pos ~ "Gpr173-/Tshr-"
  ))

# Calculate counts and proportions for each category
df_counts <- df %>%
  group_by(Age, VarComb) %>%
  summarise(n = n()) %>%
  mutate(prop = n / sum(n))

# Calculate the total counts for each category
df_total_counts <- df %>%
  group_by(Age) %>%
  summarise(total_n = n())

# Create a vector of Age names ordered by prop for Gpr173+/Tshr+ cases for each Age
ordered_Ages <- df_counts %>%
  filter(VarComb == "Gpr173+/Tshr-") %>%
  arrange(desc(prop)) %>%
  pull(Age)

# Reorder the factor levels of Age
df_counts$Age <- factor(df_counts$Age, levels = ordered_Ages)
df_total_counts$Age <- factor(df_total_counts$Age, levels = ordered_Ages)

# Reorder the factor levels of combinations
df_counts$VarComb <- factor(df_counts$VarComb, levels = rev(c("Gpr173+/Tshr-", "Gpr173+/Tshr+", "Gpr173-/Tshr+", "Gpr173-/Tshr-")))

# Create a stacked bar plot
ggplot(df_counts, aes(x = Age, y = n, fill = VarComb)) +
  geom_bar(stat = "identity", color = "black") +
  scale_fill_manual(values = c("Gpr173+/Tshr+" = "magenta4", "Gpr173+/Tshr-" = "orchid", "Gpr173-/Tshr+" = "royalblue", "Gpr173-/Tshr-" = "grey50")) +
  labs(x = "Hypothalamic subAge", y = "Number of cells", fill = "Expression") +
  theme_minimal() +
  scale_x_discrete(labels = c("E10", "E11", "E12", "E13", "E14", "E15", "E16", "E18", "P4", "P8", "P14", "P45"))

ggplot(df_counts, aes(x = Age, y = prop, fill = VarComb)) +
  geom_bar(stat = "identity", color = "black", position = "fill") +
  scale_fill_manual(values = c("Gpr173+/Tshr-" = "orchid", "Gpr173+/Tshr+" = "magenta4", "Gpr173-/Tshr+" = "royalblue", "Gpr173-/Tshr-" = "grey50")) +
  labs(x = "Hypothalamic subAge", y = "Proportion of cells", fill = "Expression") +
  theme_minimal() +
  scale_x_discrete(labels = c("E10", "E11", "E12", "E13", "E14", "E15", "E16", "E18", "P4", "P8", "P14", "P45"))

ggplot(df_counts |> filter(!VarComb %in% c("Gpr173-/Tshr-", "Gpr173+/Tshr-")), aes(x = Age, y = n, fill = VarComb)) +
  geom_bar(stat = "identity", color = "black") +
  scale_fill_manual(values = c("Gpr173+/Tshr+" = "magenta4", "Gpr173+/Tshr-" = "orchid", "Gpr173-/Tshr+" = "royalblue", "Gpr173-/Tshr-" = "grey50")) +
  labs(x = "Hypothalamic subAge", y = "Number of cells", fill = "Expression") +
  theme_minimal() +
  scale_x_discrete(labels = c("E10", "E11", "E12", "E13", "E14", "E15", "E16", "E18", "P4", "P8", "P14", "P45"))

ggplot(df_counts |> filter(!VarComb %in% c("Gpr173-/Tshr-", "Gpr173+/Tshr-")), aes(x = Age, y = prop, fill = VarComb)) +
  geom_bar(stat = "identity", color = "black", position = "fill") +
  scale_fill_manual(values = c("Gpr173+/Tshr-" = "orchid", "Gpr173+/Tshr+" = "magenta4", "Gpr173-/Tshr+" = "royalblue", "Gpr173-/Tshr-" = "grey50")) +
  labs(x = "Hypothalamic subAge", y = "Proportion of cells", fill = "Expression") +
  theme_minimal() +
  scale_x_discrete(labels = c("E10", "E11", "E12", "E13", "E14", "E15", "E16", "E18", "P4", "P8", "P14", "P45"))
```

# Dotplots

```{r}
#| label: plt-dotplot-dendrogram-genes-npr
#| fig-width: 6
#| fig-height: 6
goi <- c("Tshb", "Cck", "Pitx1", "Eya3", "Sox2", "Hlf", "Igfbp5", "Tshr", "Cckar", "Cckbr", "Gpr173")
Idents(srt) <- "Age"

DotPlot_scCustom(seurat_object = srt, colors_use = viridis(n = 30, alpha = .75, direction = -1, option = "E"), features = goi[goi %in% rownames(srt)], flip_axes = T, x_lab_rotate = TRUE, dot.scale = 15)

DotPlot(srt, features = goi[goi %in% rownames(srt)], dot.scale = 15)
```

```{r}
sessioninfo::session_info()
```
